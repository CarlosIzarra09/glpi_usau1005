{# templates/form/custom_types.html.twig #}
{% macro re_captcha_row(Id,Type)  %}

    {% set id = Id %}
    {% set type = Type %}

    <div id="{{ id }}" data-toggle="recaptcha" data-type="{{ type }}">  
    </div>
    <script>
        /**
         * The callback function executed
         * once all the Google dependencies have loaded
         */
        function onGoogleReCaptchaApiLoad() {
            var widgets = document.querySelectorAll('[data-toggle="recaptcha"]');
            for (var i = 0; i < widgets.length; i++) {
                renderReCaptcha(widgets[i]);
            }
        }
        
        /**
        * Render the given widget as a reCAPTCHA 
        * from the data-type attribute
        */

        function renderReCaptcha(widget) {
            var form = widget.closest('form');
            var widgetType = widget.getAttribute('data-type');
            var widgetParameters = {
              'sitekey': '6LemxOwjAAAAAPwVJygfBRIS9Oy0alcLrieMwPQi'
            };

            if (widgetType == 'invisible') {
            widgetParameters['callback'] = function () {
                form.submit()
            };
            widgetParameters['size'] = "invisible";
            }    
            
            var widgetId = grecaptcha.render(widget, widgetParameters);

            if (widgetType == 'invisible') {
                bindChallengeToSubmitButtons(form, widgetId);
            }
        }

        /**
        * Prevent the submit buttons from submitting a form
        * and invoke the challenge for the given captcha id
        */
        function bindChallengeToSubmitButtons(form, reCaptchaId) {
            
        }
    
    </script>
  
    <script src="https://www.google.com/recaptcha/api.js?onload=onGoogleReCaptchaApiLoad&render=explicit&hl={{app.request.locale}}" async defer>
    </script>
{% endmacro %}